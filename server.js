const express = require("express");
const rbx = require("noblox.js");
const app = express();

app.use(express.json());

const groupId = 15049970; // Replace with your Group Id
const cookie = "_|WARNING:-DO-NOT-SHARE-THIS.--Sharing-this-will-allow-someone-to-log-in-as-you-and-to-steal-your-ROBUX-and-items.|_C72A1379605F8B9E2D146A43FA54480D900F33CA78A128E25C37933EE775D3B80B7993FF9A56A99C4EF86DAE3E79AC2E1643A2F8C2654A785E6055609295E7F55CE8FF964C103F47B3B607C227937B253F137E8470A4B8ED0C6A9DA749D8AF1AC854FFA19FCB9D78867FBDE0F084D9A99CECA471A8767C47FDB800F1D90A188EABE91224B07C2F36C39C735DA97A38286494D546744C219CCBD2D442CA151CBBF487B6EDE7F75F396B39D63792D037FB1E6F831814304A6D725DC918D735E57C85531B208340DB748D2C20FCE302741E66F1FF37D80EDF36583BCE3E899631E864B237CEA64CA84DC6D6DFC271D540DD30DC149E281E7AE1E0FCB6B4E75DB9ECA3282DD398A910AD5C52CA61A4213E1902F0B5AB97C2F68449C69E13337A9D07B92E32B378F6B3ACF852D421614EE71B4FC779E0D79346FA19DCEFDEED7B1F772F89A69229006C0000321B069B58D6E1722E1E71FA9F50C20A69C233F1DD763BD9E147162E6B24F8057E266CAB7189D7127DACC2A742ADE20DD2E2B62A7118F9889C46D30BF70F3AAA210400474275EC7B2EC65618845DC63A9F342062BF64EF6C038D37E389497EA836CBC8F2BFF4FAD1672EE054BF82FEEE17118C40B03377D2FBC3EA94D0EF7B4824E5EDB8ADA6BDD221672A6D7ADC677546069DA67EE06CC8C473574C2C7EDC085A957CA8A0729365D79C3CC9053DC40B5E89A8E45EFD090322A02401122AF7913E504F4A256EF9C6B9EF5F648A04C2743917F91A765F4474F7FC3503AE3B76C785E7493602B552D7E0FF5787E0C22BB0AFD11560387463F47C790B28B8A83ABF44FAD662D9C551A5F3BB5EBBCB0C3CABA34FCC896197822F5AFD4F9199CF1EAF8C1BAC53B970E55E9F11BA8A1FBFB6B1D5F3896FA0C574439C9F9CD44CAC98AD7745C24691CF47872D0DE7B0F8F444A4AC8055AD66BA5BAAF1D0771D5307BB3691246FF00E640E617AA25C168FEBBF5E3B24BFC12DDDA588C1BB099B5237B53038C2AD1548716CC5DF1D0360F17F3F08FF2636AF9B2C75540AD901O"; // Replace with your account cookie

// honor amount: roleid
const honorRanks = {
  0: 102794177,
  1: 84972954,
  5: 85150886,
  10: 89383841,
  15: 85006910,
  20: 85006940,
  30: 84972953,
  40: 90562516,
  50: 91138752,
  70: 87676269,
  90: 34706580,
  120: 102794281,
  150: 89896768
};

app.post("/ranker", async (req, res) => {
  const { userid, honor } = req.body;

  // Validate input
  if (!userid || !honor || typeof userid !== 'number' || typeof honor !== 'number') {
    return res.status(400).json({ error: "Invalid input." });
  }

  // Determine the role ID based on honor
  let roleId;
  for (let [threshold, id] of Object.entries(honorRanks).reverse()) {
    if (honor >= threshold) {
      roleId = id;
      break;
    }
  }

  if (!roleId) {
    return res.status(400).json({ error: "Invalid honor level." });
  }

  try {
    await rbx.setCookie(cookie);
    await rbx.setRank(groupId, parseInt(userid), roleId);
    res.json({ message: "Rank updated successfully!" });
  } catch (err) {
    console.error("Failed to set rank: ", err);
    res.status(500).json({ error: "Failed to set rank." });
  }
});

const listener = app.listen(process.env.PORT || 3000, () => {
  console.log("Your app is listening on port " + listener.address().port);
});

app.post("/test", (req, res) => {
  console.log("Test request received");
  res.json({ message: "Test request processed" });
});